#%RAML 1.0 Library
uses:
  annotations: ../../global-apis-commons-commons-v0/annotations/annotationsLibrary.raml
  amount: amount.raml
  contract: contract.raml

types:
  transactions:
    type: array
    items:
      properties:
        id:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "REQUIRED"
          type: string
          required: false
          description: |
            Unique identifier of the transaction.
        localAmount:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "REQUIRED"
          type: amount.amount
          required: false
          description: |
            Amount that is associated to the transaction on the local currency. This amount may not include any charges that the bank can carry with the operation.
        originAmount:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "OPTIONAL"
          type: amount.amount
          required: false
          description: |
            Origin amount that is associated to the transaction. This attribute can only be informed when the transactions has been performed on a currency that is different from the contract\`s original currency. For example, when a customer performs a purchase in USD using his card that is associated to an account opened in Euros, originAmount attribute will be fulfilled with the original price of the item purchased in UK. This amount may not include any charges that the bank can carry with the operation.
        moneyFlow:
          (annotations.bindingDefinition):
            - method: "GET"
              input: "NONE"
              output: "OPTIONAL"
          type: object
          description: |
            Indicates whether the operation is an addition or a substraction from the total balance that customer has in the cotract that is being querying.
          required: false
          properties:
            id:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              enum: ["INCOME", "EXPENSE"]
              (annotations.enumDescription):
                - INCOME: The operation adds funds to the available balance or granted credit in case of credit products.
                - EXPENSE: The operation substracts funds from the available balance or granted credit in case of credit products.
              description: |
                Money flow identifier.
            name:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              description: |
                Description of money flow.
        concept:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "REQUIRED"
          type: string
          required: false
          description: |
            Brief description of the operative that create the transaction. Backend must provide this information depending on the transaction\`s type.
        transactionType:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "REQUIRED"
          type: object
          required: false
          description: |
            Transaction type. It talks about which kind of operative has created this transaction. DISCLAIMER: Nowsdays some geographies have no possibility of identifying all the types of transaction that are detailed below. This should not become an impediment that in the near future this inconvenience be fixed by the corresponding backends and allow the customers to know and filter those transactions according to their criteria.
          properties:
            id:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              enum: [PURCHASE, REFUND, CASH_WITHDRAWAL, CASH_INCOME, UNCATEGORIZED]
              (annotations.enumDescription):
                - PURCHASE: Transaction that represent when customer buys a product.
                - REFUND: Transaction that represent a compensation paid to a customer for over-invoicing or for returned goods.
                - CASH_WITHDRAWAL: Transaction that represent when customer withdraw part or all of an accumulation from an account or credit line. This kind of operation can be performed in one of our offices or using an ATM.
                - CASH_INCOME: Transaction that represents when a customer performs a cash entry operation. This kind of operation can be performed in one of our offices or using an ATM.
                - UNCATEGORIZED: Transaction cannot be categorized in one of the other that are listed above.
              description: |
                Transaction type identifier. DISCLAIMER: UNCATEGORIZED type will be accompanied by information that must be fulfilled on the attribute internalCode that belogs to transactionType.
            name:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              description: |
                Name associated to the transaction type.
            internalCode:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "OPTIONAL"
              type: object
              required: false
              description: |
                Associated to the transaction type that can\`t be categorized and must be considered. DISCLAIMER: In case of using UNCATEGORIZED type, this attribute must be forcible informed with the informations that talks about which kind of transaction is being shown.
              properties:
                id:
                  (annotations.bindingDefinition):
                    - method: "GET"
                      input: "NONE"
                      output: "OPTIONAL"
                  type: object
                  required: false
                  description: |
                    Identifier associated to the transaction type internal code that can\`t be categorized and must be considered. 
                name:
                  (annotations.bindingDefinition):
                    - method: "GET"
                      input: "NONE"
                      output: "REQUIRED"
                  type: string
                  required: false
                  description: |
                    Name associated to the transaction internal code.
        operationDate:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "REQUIRED"
          type: datetime
          format: rfc3339
          required: false
          description: |
            String based on ISO-8601 date format for providing the last date when the operation was performed by the client.
        accountedDate:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "REQUIRED"
          type: datetime
          format: rfc3339
          required: false
          description: |
            String based on ISO-8601 date format for providing the last date when the transaction was accounted.
        financingType:
          (annotations.bindingDefinition):
          - method: GET
            input: "NONE"
            output: "REQUIRED"
          type: object
          required: false
          description: |
            It represents the information about the possibility that certain operations to be financed within the conditions of the product to which they belong. For example, we can perform a purchase in an store that can be financed if the amount of the purchase is greater than 50,00 euros. The product and the transaction type can define which business rules are applied to know whether the operation can be financed or not.
          properties:
            id:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              enum: [FINANCING_AVAILABLE, FINANCED_AMOUNT, NON_FINANCING]
              (annotations.enumDescription):
                - FINANCING_AVAILABLE: Indicates wether the transaction meets the conditions to be financed.
                - FINANCED_AMOUNT: Represents a transaction that forms part of a financiable transaction.
                - NON_FINANCING: Transaction that can not be financed. This is the default value for this attribute.
              description: |
                Financing type identifier.
            name:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              description: |
                Name associated to the financing type.
        status:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "REQUIRED"
          type: object
          required: false
          description: |
            Transaction status.
          properties:
            id:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              enum: [SETTLED, PENDING]
              (annotations.enumDescription):
                - SETTLED: Represents that transaction has been fulfilled.
                - PENDING: Represents that transaction hasn't already been fulfilled.
              description: |
                Transaction status identifier.
            name:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              description: |
                Description associated to the transaction status.
        contract:
          (annotations.bindingDefinition):
            - method: "GET"
              input: "NONE"
              output: "REQUIRED"
          type: contract.contract
          required: false
          description: |
            Customer\`s contract that is being queried. When customer is performing an account\`s transactions query in this attribute must be setted the information about that account. It occurs the same for other products which transaction can be queried (i.e. cards, loans, etc...)
        tags:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "OPTIONAL"
          type: string[]
          required: false
          description: |
            List of tags that can label a transaction. This tags are customizable by the customers and can be used to help them when the try to locate a transaction.
        category:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "OPTIONAL"
          type: object
          required: false
          description: |
            Represents the category that a transaction can fit.
          properties:
            id:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              description: |
                Category identifier.
            name:
              (annotations.bindingDefinition):
                - method: "GET"
                  input: "NONE"
                  output: "REQUIRED"
              type: string
              required: false
              description: |
                Category name that provides human readable information about the category.
        additionalInformation:
          (annotations.bindingDefinition):
            - method: GET
              input: "NONE"
              output: "OPTIONAL"
          type: object
          required: false
          description: |
            Additional information related to this transaction.
          properties:
            reference:
              (annotations.bindingDefinition):
                - method: GET
                  input: "NONE"
                  output: "OPTIONAL"
              type: string
              required: false
              description: |
                Brief information that allows customers to know details about the operative that originates the transaction.
            additionalData:
              (annotations.bindingDefinition):
                - method: GET
                  input: "NONE"
                  output: "OPTIONAL"
              type: string
              required: false
              description: |
                Additional data that sometimes complements transaction information.
